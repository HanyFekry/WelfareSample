// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using WelfareDataAccess.Data;
using WelfareDataAccess.Entities;

#nullable disable

namespace WelfareDataAccess.Data.Configurations
{
    public partial class RequestConfiguration : IEntityTypeConfiguration<Request>
    {
        public void Configure(EntityTypeBuilder<Request> entity)
        {
            entity.ToTable("Request");
            entity.HasKey(e => e.RequestId);
            //entity.Property(e => e.RequestId)
            //    .HasComment("Unique identifier for each request")
            //    .HasColumnName("RequestID");
            entity.Property(e => e.CreatedByUserId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("User ID of the user who created the request record");
            entity.Property(e => e.CreatedByUserName)
                .HasMaxLength(200)
                .HasComment("User name of the user who created the request record");
            entity.Property(e => e.CreatedDate).HasComment("Date and time when the request was created");
            entity.Property(e => e.DueAmount).HasColumnType("decimal(8, 2)");
            entity.Property(e => e.DirectorateId)
                .HasComment("Identifier for the directorate associated with the request")
                .HasColumnName("FK_DirectorateID");
            entity.Property(e => e.LaborId).HasColumnName("FK_LaborId");
            entity.Property(e => e.StatusId)
                .HasComment("Identifier for the current status of a current workflow")
                .HasColumnName("FK_StatusID");
            entity.Property(e => e.WelfareTypeId)
                .HasComment("Identifier for the type of request")
                .HasColumnName("FK_WelfareTypeID");
            entity.Property(e => e.LaborMobileNo).HasMaxLength(12);
            entity.Property(e => e.Notes).HasMaxLength(256);
            entity.Property(e => e.RequestNo).HasMaxLength(14);
            entity.Property(e => e.UpdatedDate).HasComment("Date and time when the request record was last updated");
            entity.Property(e => e.UpdatedUserId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("User ID of the user who last updated the request record");
            entity.Property(e => e.UpdatedUserName)
                .HasMaxLength(200)
                .HasComment("User name of the user who last updated the request record");
            entity.Property(e => e.Version)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasComment("Timestamp for version control of the request record");

            entity.HasOne(d => d.Directorate)
                .WithMany(
                    p => p.Requests
                )
                .HasForeignKey(d => d.DirectorateId)
                .OnDelete(DeleteBehavior.Cascade);

            entity.HasOne(d => d.Status)
                .WithMany(
                    p => p.Requests
                )
                .HasForeignKey(d => d.StatusId)
                .OnDelete(DeleteBehavior.Cascade);

            entity.HasOne(d => d.WelfareType)
                .WithMany(
                    p => p.Requests
                )
                .HasForeignKey(d => d.WelfareTypeId)
                .OnDelete(DeleteBehavior.Cascade);

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Request> entity);
    }
}
